language: rust
cache: cargo

env:
  global:
    # This will be part of the release tarball
    - PROJECT_NAME=cargo-arch
    # - MAKE_DEB=yes
    # - DEB_MAINTAINER="Chiu-Hsiang Hsu <wdv4758h@gmail.com>"
    # - DEB_DESCRIPTION="Rust Arch Linux package packer"

# AFAICT There are a few ways to set up the build jobs. This one is not the DRYest but I feel is the
# easiest to reason about.
# NOTE Make *sure* you don't remove a reference (&foo) if you are going to dereference it (*foo)
matrix:
  include:
    - os: linux
      rust: nightly
      env: TARGET=aarch64-unknown-linux-gnu
      # need Trusty because the glibc in Precise is too old and doesn't support 64-bit arm
      dist: trusty
      sudo: required
      # Extra packages only for this job
      addons:
        apt:
          packages: &aarch64_unknown_linux_gnu
            # Transparent emulation
            - qemu-user-static
            - binfmt-support
    - os: linux
      rust: nightly
      env: TARGET=armv7-unknown-linux-gnueabihf
      # sudo is needed for binfmt_misc, which is needed for transparent user qemu emulation
      sudo: required
      addons:
        apt:
          packages: &armv7_unknown_linux_gnueabihf
            # Cross compiler and cross compiled C libraries
            - gcc-arm-linux-gnueabihf
            - libc6-armhf-cross
            - libc6-dev-armhf-cross
            # Transparent emulation
            - qemu-user-static
            - binfmt-support
    - os: linux
      rust: nightly
      env: TARGET=i686-unknown-linux-gnu
      addons:
        apt:
          packages: &i686_unknown_linux_gnu
            # Cross compiler and cross compiled C libraries
            - gcc-multilib
    - os: linux
      rust: nightly
      env: TARGET=i686-unknown-linux-musl
    - os: linux
      rust: nightly
      env: TARGET=x86_64-unknown-linux-gnu
    - os: linux
      rust: nightly
      env: TARGET=x86_64-unknown-linux-musl
  allow_failures:
    - os: linux
      rust: nightly
      env: TARGET=aarch64-unknown-linux-gnu
      # need Trusty because the glibc in Precise is too old and doesn't support 64-bit arm
      dist: trusty
      sudo: required
      # Extra packages only for this job
      addons:
        apt:
          packages: &aarch64_unknown_linux_gnu
            # Transparent emulation
            - qemu-user-static
            - binfmt-support
    - os: linux
      rust: nightly
      env: TARGET=i686-unknown-linux-musl
    - os: linux
      rust: nightly
      env: TARGET=x86_64-unknown-linux-musl

before_install:
  - export PATH="$PATH:$HOME/.cargo/bin"

install:
  - bash ci/install.sh

script:
  - bash ci/script.sh

before_deploy:
  - bash ci/before_deploy.sh

deploy:
  provider: releases
  # - Go to 'https://github.com/settings/tokens/new' and generate a Token with only the
  # `public_repo` scope enabled
  # - Call `travis encrypt $github_token` where $github_token is the token you got in the previous
  # step and `travis` is the official Travis CI gem (see https://rubygems.org/gems/travis/)
  # - Enter the "encrypted value" below
  api_key:
    secure: Qmn1lvYEbhVBJdzbt/c6Xm5xjuLGXFfb6Cs7qQiwHixVhH23UmsRuvBiSu3z/4QINLNUeqMoPV7en4XaH7lwibLgE/t9LMC90EKSKbPHZ2u1pG/Zs+qDwxjQET/j9aB+TIXRIK5PIvP8t2zRbOUerLBBpdNPeRncXpU7KvMzGPRpUJOCPSalRySqi6cgDesBKWcusgFYHWO4pPprMhvRFoH2xDxEyVfSr3FD77L7NYchmQjQnPi+BvrhFdA0OeZIhP0Gx39SXzUT544Q1YL70/PJN6IjhTih+9ef8PpLp3Xvp55OGYPdzj/m1LZ8XdLEQ0VDe/PrUhQsKZxgKZvstUB2g9c4NV2JY7RvzHmxqMKvqLxiCjtAoAufflAd5DvGTj8WglX6wawl1eUBZ5E5n0voN8QiGqiMjNBBDJgIIp1i4zqYJzEG5lu3AX6brl1BFx+jQGHDmLu3tDAZZmKVLhKJyFXfH0yFYypIMp1+zud7iCTnLlTBwBIZ6lArUabuosdpSSNKGKUl6eOnGJkQfhvSWq64oPrdBFc+6VnP4M7gVCeZCQTYJQlSKvPYo/UDyDdXEOi4vRJQjLxJGLLzWzzpLvMXOJICxQo1pZRZrBZRnXpvO4ERrDtPrbXZJ+0cq+dPQa6abEyl4xSc7afEZIlXZlhNXNx4/BtEO/PNcoY=
  file_glob: true
  file: ${PROJECT_NAME}-${TRAVIS_TAG}-${TARGET}.*
  # don't delete the artifacts from previous phases
  skip_cleanup: true
  # deploy when a new tag is pushed
  on:
    # channel to use to produce the release artifacts
    # NOTE make sure you only release *once* per target
    condition: $TRAVIS_RUST_VERSION = nightly
    tags: true

branches:
  only:
    # Pushes and PR to the master branch
    - master
    # IMPORTANT Ruby regex to match tags. Required, or travis won't trigger deploys when a new tag
    # is pushed. This regex matches semantic versions like v1.2.3-rc4+2016.02.22
    - /^v\d+\.\d+\.\d+.*$/

notifications:
  email:
    on_success: never
