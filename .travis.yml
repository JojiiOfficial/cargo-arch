language: rust
cache: cargo

env:
  global:
    # This will be part of the release tarball
    - PROJECT_NAME=cargo-arch
    # - MAKE_DEB=yes
    # - DEB_MAINTAINER="Chiu-Hsiang Hsu <wdv4758h@gmail.com>"
    # - DEB_DESCRIPTION="Rust Arch Linux package packer"

# AFAICT There are a few ways to set up the build jobs. This one is not the DRYest but I feel is the
# easiest to reason about.
# NOTE Make *sure* you don't remove a reference (&foo) if you are going to dereference it (*foo)
matrix:
  include:
    - os: linux
      rust: nightly
      env: TARGET=aarch64-unknown-linux-gnu
      # need Trusty because the glibc in Precise is too old and doesn't support 64-bit arm
      dist: trusty
      sudo: required
      # Extra packages only for this job
      addons:
        apt:
          packages: &aarch64_unknown_linux_gnu
            # Transparent emulation
            - qemu-user-static
            - binfmt-support
    - os: linux
      rust: nightly
      env: TARGET=armv7-unknown-linux-gnueabihf
      # sudo is needed for binfmt_misc, which is needed for transparent user qemu emulation
      sudo: required
      addons:
        apt:
          packages: &armv7_unknown_linux_gnueabihf
            # Cross compiler and cross compiled C libraries
            - gcc-arm-linux-gnueabihf
            - libc6-armhf-cross
            - libc6-dev-armhf-cross
            # Transparent emulation
            - qemu-user-static
            - binfmt-support
    - os: linux
      rust: nightly
      env: TARGET=i686-unknown-linux-gnu
      addons:
        apt:
          packages: &i686_unknown_linux_gnu
            # Cross compiler and cross compiled C libraries
            - gcc-multilib
    - os: linux
      rust: nightly
      env: TARGET=i686-unknown-linux-musl
    - os: linux
      rust: nightly
      env: TARGET=x86_64-unknown-linux-gnu
    - os: linux
      rust: nightly
      env: TARGET=x86_64-unknown-linux-musl
  allow_failures:
    - os: linux
      rust: nightly
      env: TARGET=aarch64-unknown-linux-gnu
      # need Trusty because the glibc in Precise is too old and doesn't support 64-bit arm
      dist: trusty
      sudo: required
      # Extra packages only for this job
      addons:
        apt:
          packages: &aarch64_unknown_linux_gnu
            # Transparent emulation
            - qemu-user-static
            - binfmt-support
    - os: linux
      rust: nightly
      env: TARGET=i686-unknown-linux-musl
    - os: linux
      rust: nightly
      env: TARGET=x86_64-unknown-linux-musl

before_install:
  - export PATH="$PATH:$HOME/.cargo/bin"

install:
  - bash ci/install.sh

script:
  - bash ci/script.sh

before_deploy:
  - bash ci/before_deploy.sh

deploy:
  provider: releases
  # - Go to 'https://github.com/settings/tokens/new' and generate a Token with only the
  # `public_repo` scope enabled
  # - Call `travis encrypt $github_token` where $github_token is the token you got in the previous
  # step and `travis` is the official Travis CI gem (see https://rubygems.org/gems/travis/)
  # - Enter the "encrypted value" below
  api_key:
    secure: "eLtG57L0Qng/zGlarJ1jgE1SRi/0dTyIIlZ2Gtf7M0N7hERrAuVI732Z6KqT0V7y8wfD+YyEu5lnhydv3QtBON/F3nEH48ELovW+IbezoI2O+3eqEOZLVRdpF3EPdC1QAMzn2bUcC7o0QSOvVA9Hs7DOcQIYoi0irZBOOgFWwR0KE0FPKAsF+PE/OA80O+Gr/OkCb44HBlQ4plKxX5ZfVbRCB6UIwCMKYvchwZ7gv6QCZFsTRtvfqWcMKQIEcIYpHiRIH0yRN3E+5BqwsxkVHPzw0VIu6HOxl1jArvl/7uOX5cKyPtYDGHyBhnYvksERyc5B2xpnZla5TWo5u2EpNnZGCwS78rGjg2PVsac7IrzjTo9CLvrAE01S/ox7hpW0DUs0bVIrQhoII+pANxzL2LKJCIR6ANi6JhlR6m3jmrGimi8m8Fm3eFvJFRzhnye8Pm7Nq6pl39vfw6k7OX62Vkieym8QXnQLnGpIOj63cJ4wyQ2IvlBJ3gXOQi/gJwUpJk1KitZhHqI6LZHzzXmS8B6R1lkUHsoS0RpiW4rOxjbkGXWSyFgXNeXBKJQ1imsHD3o3lFyntlayvbn8Yy/0HviOtTFKDGF6snoInkVw4bhvMAXSGeojo0raGUOc3/flWRse3Pf8X4i2ijx2uDnqFcPE87s6iH3lZOY5ZIjnWYo="
  file_glob: true
  file: ${PROJECT_NAME}-${TRAVIS_TAG}-${TARGET}.*
  # don't delete the artifacts from previous phases
  skip_cleanup: true
  # deploy when a new tag is pushed
  on:
    # channel to use to produce the release artifacts
    # NOTE make sure you only release *once* per target
    condition: $TRAVIS_RUST_VERSION = nightly
    tags: true

branches:
  only:
    # Pushes and PR to the master branch
    - master
    # IMPORTANT Ruby regex to match tags. Required, or travis won't trigger deploys when a new tag
    # is pushed. This regex matches semantic versions like v1.2.3-rc4+2016.02.22
    - /^v\d+\.\d+\.\d+.*$/

notifications:
  email:
    on_success: never
